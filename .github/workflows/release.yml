name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null)

      - name: Print version again
        run: echo ${{ steps.get_version.outputs.VERSION }}
        
      - name: Generate release notes
        id: release_notes
        run: |
          echo 'Release Notes' > RELEASE_NOTES.md
          echo '' >> RELEASE_NOTES.md
          git log --pretty=format:"- %s" >> RELEASE_NOTES.md
          echo ::set-output name=body::$(cat RELEASE_NOTES.md)

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch

      - name: Build Go with version info
        run: |
          go build -v -ldflags "-X main.version=${{ steps.get_version.outputs.VERSION }}" -o bin/aegisguard ./cmd

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.release_notes.outputs.body }}
          draft: false
          prerelease: false
      - name: Print version again
        run: echo ${{ steps.get_version.outputs.VERSION }}

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.API_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/aegisguard
          asset_name: aegisguard-${{ steps.get_version.outputs.VERSION }}
          asset_content_type: application/octet-stream
